Poster,Pre-Comment,Comment,Label
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,sau 2 tháng em đã đọc hiểu thk anh 🙁,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Từ bài viết này mình cũng muốn nhắc nhở mọi người cẩn thận khi cài những extension không rõ nguồn gốc, vì như mấy bạn thấy nó có thể truy cập vào những thông tin cá nhân, tin nhắn cá nhân. Đây là mình còn lương tâm, mình chưa thêm code gửi tin nhắn của mấy bạn tới server của mình :)) Nếu để người xấu lợi dụng, tạo extension chứa mã độc, thì thông tin của mấy bạn đi đời luôn á",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Từ bài viết này mình cũng muốn nhắc nhở mọi người cẩn thận khi cài những extension không rõ nguồn gốc, vì như mấy bạn thấy nó có thể truy cập vào những thông tin cá nhân, tin nhắn cá nhân. Đây là mình còn lương tâm, mình chưa thêm code gửi tin nhắn của mấy bạn tới server của mình :)) Nếu để người xấu lợi dụng, tạo extension chứa mã độc, thì thông tin của mấy bạn đi đời luôn á', 'Hoang Tran Bị như này là sao bác nhỉ', 'Hoang Tran Bị như này là sao bác nhỉ', 'Thành Long bác chờ mai là có bản mới nhé', 'Hoang Tran Bị như này là sao bác nhỉ', 'Thành Long bác chờ mai là có bản mới nhé', 'Trước hết bạn cần qua được kiểm duyệt của chrome store đã 😀']",Hoang Tran Bị như này là sao bác nhỉ,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Từ bài viết này mình cũng muốn nhắc nhở mọi người cẩn thận khi cài những extension không rõ nguồn gốc, vì như mấy bạn thấy nó có thể truy cập vào những thông tin cá nhân, tin nhắn cá nhân. Đây là mình còn lương tâm, mình chưa thêm code gửi tin nhắn của mấy bạn tới server của mình :)) Nếu để người xấu lợi dụng, tạo extension chứa mã độc, thì thông tin của mấy bạn đi đời luôn á', 'Hoang Tran Bị như này là sao bác nhỉ', 'Hoang Tran Bị như này là sao bác nhỉ', 'Thành Long bác chờ mai là có bản mới nhé', 'Hoang Tran Bị như này là sao bác nhỉ', 'Thành Long bác chờ mai là có bản mới nhé', 'Trước hết bạn cần qua được kiểm duyệt của chrome store đã 😀']",Thành Long bác chờ mai là có bản mới nhé,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Từ bài viết này mình cũng muốn nhắc nhở mọi người cẩn thận khi cài những extension không rõ nguồn gốc, vì như mấy bạn thấy nó có thể truy cập vào những thông tin cá nhân, tin nhắn cá nhân. Đây là mình còn lương tâm, mình chưa thêm code gửi tin nhắn của mấy bạn tới server của mình :)) Nếu để người xấu lợi dụng, tạo extension chứa mã độc, thì thông tin của mấy bạn đi đời luôn á', 'Hoang Tran Bị như này là sao bác nhỉ', 'Hoang Tran Bị như này là sao bác nhỉ', 'Thành Long bác chờ mai là có bản mới nhé', 'Hoang Tran Bị như này là sao bác nhỉ', 'Thành Long bác chờ mai là có bản mới nhé', 'Trước hết bạn cần qua được kiểm duyệt của chrome store đã 😀']",Trước hết bạn cần qua được kiểm duyệt của chrome store đã 😀,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Từ bài viết này mình cũng muốn nhắc nhở mọi người cẩn thận khi cài những extension không rõ nguồn gốc, vì như mấy bạn thấy nó có thể truy cập vào những thông tin cá nhân, tin nhắn cá nhân. Đây là mình còn lương tâm, mình chưa thêm code gửi tin nhắn của mấy bạn tới server của mình :)) Nếu để người xấu lợi dụng, tạo extension chứa mã độc, thì thông tin của mấy bạn đi đời luôn á', 'Hoang Tran Bị như này là sao bác nhỉ', 'Hoang Tran Bị như này là sao bác nhỉ', 'Thành Long bác chờ mai là có bản mới nhé', 'Hoang Tran Bị như này là sao bác nhỉ', 'Thành Long bác chờ mai là có bản mới nhé', 'Trước hết bạn cần qua được kiểm duyệt của chrome store đã 😀']",Việt Thảo có những extension có thể tải file về cài qua dev mode chứ đâu phải cái gì cũng qua kiểm duyệt của chrome store đâu,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nguyễn Văn Hiệp thêm cái nì cho cái extension của pạng ik 🥺,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Trần Thế Hiển sr nãy tag nhầm bài bên 3s team,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Karin Krin 🥲 chời quơi có xóa hì cũng có cách đọc lại dc,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Phú Thuận,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"À mấy bác cho e hỏi ké luôn với, chứ mà đăng bài chờ duyệt có khi tới hết dịch luôn. PC của e dạo gần đây bị full ổ cứng một cách bất thường. Hôm qua còn trống 37GB này còn 20GB. Không biết nguyên nhân tại sao, đã thử dọn thùng rác, windows update, đã làm theo một số hướng dẫn trên mạng như không khả thi. Bác nào biết hoặc từng bị giúp e với. E cảm ơn. Dưới là hình ổ C 😭😭😭",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['À mấy bác cho e hỏi ké luôn với, chứ mà đăng bài chờ duyệt có khi tới hết dịch luôn. PC của e dạo gần đây bị full ổ cứng một cách bất thường. Hôm qua còn trống 37GB này còn 20GB. Không biết nguyên nhân tại sao, đã thử dọn thùng rác, windows update, đã làm theo một số hướng dẫn trên mạng như không khả thi. Bác nào biết hoặc từng bị giúp e với. E cảm ơn. Dưới là hình ổ C 😭😭😭', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'à e thấy rồi, cảm ơn bác', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'à e thấy rồi, cảm ơn bác', 'Đoàn Đv ok không có gì']",bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['À mấy bác cho e hỏi ké luôn với, chứ mà đăng bài chờ duyệt có khi tới hết dịch luôn. PC của e dạo gần đây bị full ổ cứng một cách bất thường. Hôm qua còn trống 37GB này còn 20GB. Không biết nguyên nhân tại sao, đã thử dọn thùng rác, windows update, đã làm theo một số hướng dẫn trên mạng như không khả thi. Bác nào biết hoặc từng bị giúp e với. E cảm ơn. Dưới là hình ổ C 😭😭😭', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'à e thấy rồi, cảm ơn bác', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'à e thấy rồi, cảm ơn bác', 'Đoàn Đv ok không có gì']",Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['À mấy bác cho e hỏi ké luôn với, chứ mà đăng bài chờ duyệt có khi tới hết dịch luôn. PC của e dạo gần đây bị full ổ cứng một cách bất thường. Hôm qua còn trống 37GB này còn 20GB. Không biết nguyên nhân tại sao, đã thử dọn thùng rác, windows update, đã làm theo một số hướng dẫn trên mạng như không khả thi. Bác nào biết hoặc từng bị giúp e với. E cảm ơn. Dưới là hình ổ C 😭😭😭', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'à e thấy rồi, cảm ơn bác', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'à e thấy rồi, cảm ơn bác', 'Đoàn Đv ok không có gì']","à e thấy rồi, cảm ơn bác",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['À mấy bác cho e hỏi ké luôn với, chứ mà đăng bài chờ duyệt có khi tới hết dịch luôn. PC của e dạo gần đây bị full ổ cứng một cách bất thường. Hôm qua còn trống 37GB này còn 20GB. Không biết nguyên nhân tại sao, đã thử dọn thùng rác, windows update, đã làm theo một số hướng dẫn trên mạng như không khả thi. Bác nào biết hoặc từng bị giúp e với. E cảm ơn. Dưới là hình ổ C 😭😭😭', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'à e thấy rồi, cảm ơn bác', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'à e thấy rồi, cảm ơn bác', 'Đoàn Đv ok không có gì']",Đoàn Đv ok không có gì,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['À mấy bác cho e hỏi ké luôn với, chứ mà đăng bài chờ duyệt có khi tới hết dịch luôn. PC của e dạo gần đây bị full ổ cứng một cách bất thường. Hôm qua còn trống 37GB này còn 20GB. Không biết nguyên nhân tại sao, đã thử dọn thùng rác, windows update, đã làm theo một số hướng dẫn trên mạng như không khả thi. Bác nào biết hoặc từng bị giúp e với. E cảm ơn. Dưới là hình ổ C 😭😭😭', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'à e thấy rồi, cảm ơn bác', 'bác tải windirstat về xem ổ nào đang tăng với nhiều dung lượng thử xem', 'Ông Danh Beo dạ đây bác ơi. mà e tìm file đó ko thấy', 'à e thấy rồi, cảm ơn bác', 'Đoàn Đv ok không có gì']","Đoàn Đv như ngày trước thì em cài microsoft sql thì trúng bản lỗi, database của em nó mỗi ngày tự sinh ra file dump ngày ngày phình ra 5gb mà k hiểu đâu ra mãi mới tìm dc nguyên nhân =)) em thì em dùng folder size app ngoài để coi từng dc từng thư mục nào cái nặng bất thường để tìm ra.",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Xịn quá vậy :)))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Xịn quá vậy :))))', 'Loan Tô cài tool chưa :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Trang Chanp ơ dạo này Hườn tiến bộ rồi :))))']",Loan Tô cài tool chưa :))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Xịn quá vậy :))))', 'Loan Tô cài tool chưa :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Trang Chanp ơ dạo này Hườn tiến bộ rồi :))))']","Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Xịn quá vậy :))))', 'Loan Tô cài tool chưa :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Trang Chanp ơ dạo này Hườn tiến bộ rồi :))))']",Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Xịn quá vậy :))))', 'Loan Tô cài tool chưa :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Trang Chanp ơ dạo này Hườn tiến bộ rồi :))))']",Trang Chanp thôi đượt rồi em thua😭😭😭,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Xịn quá vậy :))))', 'Loan Tô cài tool chưa :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Trang Chanp ơ dạo này Hườn tiến bộ rồi :))))']",Trang Chanp ơ dạo này Hườn tiến bộ rồi :)))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Xịn quá vậy :))))', 'Loan Tô cài tool chưa :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Loan Tô cài tool chưa :)))', 'Nguyen Thuong Minh Chưa, anh để dành khi nào có bản hoàn thiện thì cài :)))', 'Phạm Hường m nghĩ m thoát khỏi tay c Loan Tô á', 'Trang Chanp thôi đượt rồi em thua😭😭😭', 'Trang Chanp ơ dạo này Hườn tiến bộ rồi :))))']",Loan Tô lâu lắm em mới đc chị Loan khen 😘😘😘😘,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Ngọc Mai hê hê,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Phạm Vỹ tag m để m đọc dùm,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,like cho bác vì sau 2000 năm làm regex,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"cái này chỉ xem lại được ngay lúc đó , chứ k xem được tin đã thu hồi qua trong quá khứ nhỏ :D",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['cái này chỉ xem lại được ngay lúc đó , chứ k xem được tin đã thu hồi qua trong quá khứ nhỏ :D', 'Đinh Đức Thi tham lam']",Đinh Đức Thi tham lam,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['cái này chỉ xem lại được ngay lúc đó , chứ k xem được tin đã thu hồi qua trong quá khứ nhỏ :D', 'Đinh Đức Thi tham lam']",Le The Hung haha tham thì phải tham cho trót :V,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:
https://youtu.be/tsMgMZtKWek",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:\nhttps://youtu.be/tsMgMZtKWek', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình ông hoàng cơ hội']",Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:\nhttps://youtu.be/tsMgMZtKWek', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình ông hoàng cơ hội']",Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:\nhttps://youtu.be/tsMgMZtKWek', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình ông hoàng cơ hội']",Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:\nhttps://youtu.be/tsMgMZtKWek', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình ông hoàng cơ hội']",Truong Dang Duong vâng bác :333,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:\nhttps://youtu.be/tsMgMZtKWek', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình ông hoàng cơ hội']",Lê Quốc Bình idol trong lòng eim,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:\nhttps://youtu.be/tsMgMZtKWek', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình ông hoàng cơ hội']",Lê Quốc Bình idol,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:\nhttps://youtu.be/tsMgMZtKWek', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình ông hoàng cơ hội']",pr trá hình quá bạn eei,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:\nhttps://youtu.be/tsMgMZtKWek', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình ông hoàng cơ hội']",Lê Quốc Bình chúa tể marketing à :)),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:\nhttps://youtu.be/tsMgMZtKWek', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình ông hoàng cơ hội']",Lê Quốc Bình ông hoàng cơ hội,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ai muốn nhanh gọn lẹ hơn thì xài luôn KB2A Tool cho nhanh nha:\nhttps://youtu.be/tsMgMZtKWek', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình mình làm giống video mà gỡ tn là mất luôn :3', 'Sài kb2a thì ui sẽ đẹp hơn và rất dễ thao tác', 'Phan Đức Thắng inbox page KB2A Team để được hỗ trợ về tool nha < 3', 'Truong Dang Duong vâng bác :333', 'Lê Quốc Bình idol trong lòng eim', 'Lê Quốc Bình idol', 'pr trá hình quá bạn eei', 'Lê Quốc Bình chúa tể marketing à :))', 'Lê Quốc Bình ông hoàng cơ hội']",Lê Quốc Bình trúa tể trank tkủ,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Để custom lại hiển thị trên mess luôn cho tiện :v,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Mk thấy extension hay lại còn nhỏ gọn nữa nếu bác thấy cần thì có thể ib mk, mk sẽ up lên webstore giúp và mọi credit đều thuộc về bác =)))",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Mk thấy extension hay lại còn nhỏ gọn nữa nếu bác thấy cần thì có thể ib mk, mk sẽ up lên webstore giúp và mọi credit đều thuộc về bác =)))', 'Nguyễn Văn Hiệp .______.', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Hoang Tran đc bác =))']",Nguyễn Văn Hiệp .______.,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Mk thấy extension hay lại còn nhỏ gọn nữa nếu bác thấy cần thì có thể ib mk, mk sẽ up lên webstore giúp và mọi credit đều thuộc về bác =)))', 'Nguyễn Văn Hiệp .______.', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Hoang Tran đc bác =))']",Vu Hoang Anh kìa =))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Mk thấy extension hay lại còn nhỏ gọn nữa nếu bác thấy cần thì có thể ib mk, mk sẽ up lên webstore giúp và mọi credit đều thuộc về bác =)))', 'Nguyễn Văn Hiệp .______.', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Hoang Tran đc bác =))']",Hong coa j dau anh,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Mk thấy extension hay lại còn nhỏ gọn nữa nếu bác thấy cần thì có thể ib mk, mk sẽ up lên webstore giúp và mọi credit đều thuộc về bác =)))', 'Nguyễn Văn Hiệp .______.', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Hoang Tran đc bác =))']",ù ôi được luôn hả :))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Mk thấy extension hay lại còn nhỏ gọn nữa nếu bác thấy cần thì có thể ib mk, mk sẽ up lên webstore giúp và mọi credit đều thuộc về bác =)))', 'Nguyễn Văn Hiệp .______.', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Hoang Tran đc bác =))']",Hoang Tran đc bác =)),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Mk thấy extension hay lại còn nhỏ gọn nữa nếu bác thấy cần thì có thể ib mk, mk sẽ up lên webstore giúp và mọi credit đều thuộc về bác =)))', 'Nguyễn Văn Hiệp .______.', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Nguyễn Văn Hiệp .______.', 'Vu Hoang Anh kìa =)))', 'Hong coa j dau anh', 'ù ôi được luôn hả :)))', 'Hoang Tran đc bác =))']",Idol :3,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Cho những bạn chưa biết cách cài và cách dùng:

1: CÀI ĐẶT: vào đường link github mình để trên stt, rồi tải code về, giải nén. Sau đó vào trang quản lý extensions trong trình duyệt bạn dùng, rồi kéo thả folder đã giải nén là xong (nhớ bật dấu tích Developer mode lên mới kéo thả vô được nhé)

2: SỬ DỤNG: F5 lại trang facebook là extension sẽ tự chạy. ấn F12 để mở giao diện console trên trình duyệt. Trong console nó sẽ ghi lại tất cả tin nhắn tới và đi. Nếu có ai đó thu hồi tin nhắn, các bạn chỉ cần vào lại console xem lịch sử tin nhắn là xong.",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cho những bạn chưa biết cách cài và cách dùng:\n\n1: CÀI ĐẶT: vào đường link github mình để trên stt, rồi tải code về, giải nén. Sau đó vào trang quản lý extensions trong trình duyệt bạn dùng, rồi kéo thả folder đã giải nén là xong (nhớ bật dấu tích Developer mode lên mới kéo thả vô được nhé)\n\n2: SỬ DỤNG: F5 lại trang facebook là extension sẽ tự chạy. ấn F12 để mở giao diện console trên trình duyệt. Trong console nó sẽ ghi lại tất cả tin nhắn tới và đi. Nếu có ai đó thu hồi tin nhắn, các bạn chỉ cần vào lại console xem lịch sử tin nhắn là xong.', 'Hoang Tran tải cái nào z bro', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran Tin nhắn đã lưu nhưng tắt trình duyệt đi mở lại cũng vẫn mất đúng ko bác?']",Hoang Tran tải cái nào z bro,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cho những bạn chưa biết cách cài và cách dùng:\n\n1: CÀI ĐẶT: vào đường link github mình để trên stt, rồi tải code về, giải nén. Sau đó vào trang quản lý extensions trong trình duyệt bạn dùng, rồi kéo thả folder đã giải nén là xong (nhớ bật dấu tích Developer mode lên mới kéo thả vô được nhé)\n\n2: SỬ DỤNG: F5 lại trang facebook là extension sẽ tự chạy. ấn F12 để mở giao diện console trên trình duyệt. Trong console nó sẽ ghi lại tất cả tin nhắn tới và đi. Nếu có ai đó thu hồi tin nhắn, các bạn chỉ cần vào lại console xem lịch sử tin nhắn là xong.', 'Hoang Tran tải cái nào z bro', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran Tin nhắn đã lưu nhưng tắt trình duyệt đi mở lại cũng vẫn mất đúng ko bác?']",Tải zip nhé,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cho những bạn chưa biết cách cài và cách dùng:\n\n1: CÀI ĐẶT: vào đường link github mình để trên stt, rồi tải code về, giải nén. Sau đó vào trang quản lý extensions trong trình duyệt bạn dùng, rồi kéo thả folder đã giải nén là xong (nhớ bật dấu tích Developer mode lên mới kéo thả vô được nhé)\n\n2: SỬ DỤNG: F5 lại trang facebook là extension sẽ tự chạy. ấn F12 để mở giao diện console trên trình duyệt. Trong console nó sẽ ghi lại tất cả tin nhắn tới và đi. Nếu có ai đó thu hồi tin nhắn, các bạn chỉ cần vào lại console xem lịch sử tin nhắn là xong.', 'Hoang Tran tải cái nào z bro', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran Tin nhắn đã lưu nhưng tắt trình duyệt đi mở lại cũng vẫn mất đúng ko bác?']",chỉ những tin nhắn sau khi được cài extension hả bác,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cho những bạn chưa biết cách cài và cách dùng:\n\n1: CÀI ĐẶT: vào đường link github mình để trên stt, rồi tải code về, giải nén. Sau đó vào trang quản lý extensions trong trình duyệt bạn dùng, rồi kéo thả folder đã giải nén là xong (nhớ bật dấu tích Developer mode lên mới kéo thả vô được nhé)\n\n2: SỬ DỤNG: F5 lại trang facebook là extension sẽ tự chạy. ấn F12 để mở giao diện console trên trình duyệt. Trong console nó sẽ ghi lại tất cả tin nhắn tới và đi. Nếu có ai đó thu hồi tin nhắn, các bạn chỉ cần vào lại console xem lịch sử tin nhắn là xong.', 'Hoang Tran tải cái nào z bro', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran Tin nhắn đã lưu nhưng tắt trình duyệt đi mở lại cũng vẫn mất đúng ko bác?']",La Văn Bá đúng rồi bác,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cho những bạn chưa biết cách cài và cách dùng:\n\n1: CÀI ĐẶT: vào đường link github mình để trên stt, rồi tải code về, giải nén. Sau đó vào trang quản lý extensions trong trình duyệt bạn dùng, rồi kéo thả folder đã giải nén là xong (nhớ bật dấu tích Developer mode lên mới kéo thả vô được nhé)\n\n2: SỬ DỤNG: F5 lại trang facebook là extension sẽ tự chạy. ấn F12 để mở giao diện console trên trình duyệt. Trong console nó sẽ ghi lại tất cả tin nhắn tới và đi. Nếu có ai đó thu hồi tin nhắn, các bạn chỉ cần vào lại console xem lịch sử tin nhắn là xong.', 'Hoang Tran tải cái nào z bro', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran Tin nhắn đã lưu nhưng tắt trình duyệt đi mở lại cũng vẫn mất đúng ko bác?']","Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cho những bạn chưa biết cách cài và cách dùng:\n\n1: CÀI ĐẶT: vào đường link github mình để trên stt, rồi tải code về, giải nén. Sau đó vào trang quản lý extensions trong trình duyệt bạn dùng, rồi kéo thả folder đã giải nén là xong (nhớ bật dấu tích Developer mode lên mới kéo thả vô được nhé)\n\n2: SỬ DỤNG: F5 lại trang facebook là extension sẽ tự chạy. ấn F12 để mở giao diện console trên trình duyệt. Trong console nó sẽ ghi lại tất cả tin nhắn tới và đi. Nếu có ai đó thu hồi tin nhắn, các bạn chỉ cần vào lại console xem lịch sử tin nhắn là xong.', 'Hoang Tran tải cái nào z bro', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran Tin nhắn đã lưu nhưng tắt trình duyệt đi mở lại cũng vẫn mất đúng ko bác?']","La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cho những bạn chưa biết cách cài và cách dùng:\n\n1: CÀI ĐẶT: vào đường link github mình để trên stt, rồi tải code về, giải nén. Sau đó vào trang quản lý extensions trong trình duyệt bạn dùng, rồi kéo thả folder đã giải nén là xong (nhớ bật dấu tích Developer mode lên mới kéo thả vô được nhé)\n\n2: SỬ DỤNG: F5 lại trang facebook là extension sẽ tự chạy. ấn F12 để mở giao diện console trên trình duyệt. Trong console nó sẽ ghi lại tất cả tin nhắn tới và đi. Nếu có ai đó thu hồi tin nhắn, các bạn chỉ cần vào lại console xem lịch sử tin nhắn là xong.', 'Hoang Tran tải cái nào z bro', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran Tin nhắn đã lưu nhưng tắt trình duyệt đi mở lại cũng vẫn mất đúng ko bác?']",Hoang Tran Tin nhắn đã lưu nhưng tắt trình duyệt đi mở lại cũng vẫn mất đúng ko bác?,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cho những bạn chưa biết cách cài và cách dùng:\n\n1: CÀI ĐẶT: vào đường link github mình để trên stt, rồi tải code về, giải nén. Sau đó vào trang quản lý extensions trong trình duyệt bạn dùng, rồi kéo thả folder đã giải nén là xong (nhớ bật dấu tích Developer mode lên mới kéo thả vô được nhé)\n\n2: SỬ DỤNG: F5 lại trang facebook là extension sẽ tự chạy. ấn F12 để mở giao diện console trên trình duyệt. Trong console nó sẽ ghi lại tất cả tin nhắn tới và đi. Nếu có ai đó thu hồi tin nhắn, các bạn chỉ cần vào lại console xem lịch sử tin nhắn là xong.', 'Hoang Tran tải cái nào z bro', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran tải cái nào z bro', 'Tải zip nhé', 'chỉ những tin nhắn sau khi được cài extension hả bác', 'La Văn Bá đúng rồi bác', 'Hoang Tran Thế lúc mình ko dùng chrome, thì khi bật máy lên có xem đc tin nhắn bị gỡ lúc chrome tắt ko bác.', 'La Văn Bá không nha bác, phải bật tab thì extension mới chạy, nó chạy thì nó mới lưu tin nhắn vào console được nhé', 'Hoang Tran Tin nhắn đã lưu nhưng tắt trình duyệt đi mở lại cũng vẫn mất đúng ko bác?']","La Văn Bá đúng r bạn, hiện tại mình đang làm bản mới lưu ngay cả khi tắt rồi nhé",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nguyễn Tùng,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",['Nguyễn Tùng'],Trang Linh xịn nhaa,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Đợi bác update lên dễ nhìn mess gỡ hơn và ra bản edge,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Đợi bác update lên dễ nhìn mess gỡ hơn và ra bản edge', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Phạm Vỹ ý bạn là sao', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Phạm Vỹ ý bạn là sao', 'Hoang Tran Bác cho lên store Edge nó không lấy phí hay sao ấy bác']",Nguyễn Việt Anh hiện edge vẫn xài được nha bạn,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Đợi bác update lên dễ nhìn mess gỡ hơn và ra bản edge', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Phạm Vỹ ý bạn là sao', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Phạm Vỹ ý bạn là sao', 'Hoang Tran Bác cho lên store Edge nó không lấy phí hay sao ấy bác']","Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Đợi bác update lên dễ nhìn mess gỡ hơn và ra bản edge', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Phạm Vỹ ý bạn là sao', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Phạm Vỹ ý bạn là sao', 'Hoang Tran Bác cho lên store Edge nó không lấy phí hay sao ấy bác']",Phạm Vỹ ý bạn là sao,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Đợi bác update lên dễ nhìn mess gỡ hơn và ra bản edge', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Phạm Vỹ ý bạn là sao', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Phạm Vỹ ý bạn là sao', 'Hoang Tran Bác cho lên store Edge nó không lấy phí hay sao ấy bác']",Hoang Tran Bác cho lên store Edge nó không lấy phí hay sao ấy bác,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Đợi bác update lên dễ nhìn mess gỡ hơn và ra bản edge', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Phạm Vỹ ý bạn là sao', 'Nguyễn Việt Anh hiện edge vẫn xài được nha bạn', 'Hoang Tran bác ơi, cái của bác xem được tin nhắn thôi ạ?', 'Phạm Vỹ ý bạn là sao', 'Hoang Tran Bác cho lên store Edge nó không lấy phí hay sao ấy bác']",Nguyễn Việt Anh mình cập nhật xong sẽ đăng lên nhé,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,với video thì chỉ nhìn được ảnh thumbnail thôi chứ không xem được bác ơi,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",['với video thì chỉ nhìn được ảnh thumbnail thôi chứ không xem được bác ơi'],Mạnh Hùng mình sẽ fix nhé,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,cây bi tu ây 🌚,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Quyên t biết bạn m hay gỡ mà.,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Quyên t biết bạn m hay gỡ mà.', 'Hải Lưu bữa nay bạn t ngoan rồi k thấy gỡ nữa :))']",Hải Lưu bữa nay bạn t ngoan rồi k thấy gỡ nữa :)),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Quyên t biết bạn m hay gỡ mà.', 'Hải Lưu bữa nay bạn t ngoan rồi k thấy gỡ nữa :))']",Quyên tuyệt zời 🥳🥳🥳,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Biến tướng lại 1 tý để cài vô máy người yêu, vợ, chồng để đọc trộm tin nhắn các bạn ợ 🤣🤣🤣",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Biến tướng lại 1 tý để cài vô máy người yêu, vợ, chồng để đọc trộm tin nhắn các bạn ợ 🤣🤣🤣', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'Trung Kiên à quên bạn, quên step này, hèn chi thấy có bug 😂😂😂', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'Trung Kiên à quên bạn, quên step này, hèn chi thấy có bug 😂😂😂', 'Lâm Ngọc Khương đúng rồi, phải unit test cho kĩ chứ 😁']","ok bạn, nhưng trước mắt để kiếm người yêu đã :)))",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Biến tướng lại 1 tý để cài vô máy người yêu, vợ, chồng để đọc trộm tin nhắn các bạn ợ 🤣🤣🤣', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'Trung Kiên à quên bạn, quên step này, hèn chi thấy có bug 😂😂😂', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'Trung Kiên à quên bạn, quên step này, hèn chi thấy có bug 😂😂😂', 'Lâm Ngọc Khương đúng rồi, phải unit test cho kĩ chứ 😁']","Trung Kiên à quên bạn, quên step này, hèn chi thấy có bug 😂😂😂",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Biến tướng lại 1 tý để cài vô máy người yêu, vợ, chồng để đọc trộm tin nhắn các bạn ợ 🤣🤣🤣', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'Trung Kiên à quên bạn, quên step này, hèn chi thấy có bug 😂😂😂', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'Trung Kiên à quên bạn, quên step này, hèn chi thấy có bug 😂😂😂', 'Lâm Ngọc Khương đúng rồi, phải unit test cho kĩ chứ 😁']","Lâm Ngọc Khương đúng rồi, phải unit test cho kĩ chứ 😁",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Biến tướng lại 1 tý để cài vô máy người yêu, vợ, chồng để đọc trộm tin nhắn các bạn ợ 🤣🤣🤣', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'Trung Kiên à quên bạn, quên step này, hèn chi thấy có bug 😂😂😂', 'ok bạn, nhưng trước mắt để kiếm người yêu đã :)))', 'Trung Kiên à quên bạn, quên step này, hèn chi thấy có bug 😂😂😂', 'Lâm Ngọc Khương đúng rồi, phải unit test cho kĩ chứ 😁']","Trung Kiên xin lỗi thằng bạn, cơ mà tách ra đi kiếm ng iu đi, chớ 2 thằng ở đây ế chết moẹ",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Cái trò inject websocket này thú vị phết. Sẽ học hỏi để làm mấy extension cho công việc 😀,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Phạm Minh Trí,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']",Thắng thế thì ko lưu được tin nhắn ib,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']",này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']",Nguyễn Hiếu cài trực tiếp trên account ấy b.,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']","Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']",Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']",Nguyễn Đức Tiến Có luôn bác nhé,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']",Hoàng Hải Long bác có tiện k chỉ e với,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']",Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']","Uyên Ly cái này chạy = account facebook, dễ bị checkpoint",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']",Uyên Ly cân nhắc trước đi nhen,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']",Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']","Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']","Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['thực ra các bác có thể đơn giản hóa bằng cách dùng 1 con bot chat như thế này:', 'Thắng thế thì ko lưu được tin nhắn ib', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Thắng thế thì ko lưu được tin nhắn ib', 'này là cài vào group hả bạn? chứ 2 người thì chạy sao nhỉ?', 'Nguyễn Hiếu cài trực tiếp trên account ấy b.', 'Hoàng Hải Long cài nnao thế bác ơi, có xem được hình ảnh, âm thanh hay video k ạ?', 'Thắng hấp dẫn thế :3 làm tut tạo bot đi bạn :3', 'Nguyễn Đức Tiến Có luôn bác nhé', 'Hoàng Hải Long bác có tiện k chỉ e với', 'Thắng b ơi có thể hướng dẫn mình cách tạo kh mình đang cần lắm = (((((', 'Uyên Ly cái này chạy = account facebook, dễ bị checkpoint', 'Uyên Ly cân nhắc trước đi nhen', 'Nguyễn Đức Tiến Ib qua đây nhó https://www.facebook.com/profile.php?id=100068126861379', 'Thắng nhờ b hướng dẫn ạ, giờ có mất cũng được miễn mình đọc được thông tin 🥺🥺', 'Uyên Ly ib anh hoàng hải long ở trên đi b,ổng cao tay hơn mình :v']",Thắng cảm ơn b nhé,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Xuất sắc luôn 🤣,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"1 con app leak đc tin nhắn messenger, người ta thu hồi gì bên messenger thì bên app vẫn còn :)))",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['1 con app leak đc tin nhắn messenger, người ta thu hồi gì bên messenger thì bên app vẫn còn :)))', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Dương T. Bảo nó xem đc text thôi bác, ko xem đc picture hay voice', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Dương T. Bảo nó xem đc text thôi bác, ko xem đc picture hay voice', 'Nguyễn Phương bữa cũng dùng 1 lần xong bị cp nên xóa luôn :))']",Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['1 con app leak đc tin nhắn messenger, người ta thu hồi gì bên messenger thì bên app vẫn còn :)))', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Dương T. Bảo nó xem đc text thôi bác, ko xem đc picture hay voice', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Dương T. Bảo nó xem đc text thôi bác, ko xem đc picture hay voice', 'Nguyễn Phương bữa cũng dùng 1 lần xong bị cp nên xóa luôn :))']","Dương T. Bảo nó xem đc text thôi bác, ko xem đc picture hay voice",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['1 con app leak đc tin nhắn messenger, người ta thu hồi gì bên messenger thì bên app vẫn còn :)))', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Dương T. Bảo nó xem đc text thôi bác, ko xem đc picture hay voice', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Dương T. Bảo nó xem đc text thôi bác, ko xem đc picture hay voice', 'Nguyễn Phương bữa cũng dùng 1 lần xong bị cp nên xóa luôn :))']",Nguyễn Phương bữa cũng dùng 1 lần xong bị cp nên xóa luôn :)),1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['1 con app leak đc tin nhắn messenger, người ta thu hồi gì bên messenger thì bên app vẫn còn :)))', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Dương T. Bảo nó xem đc text thôi bác, ko xem đc picture hay voice', 'Nguyễn Phương em k lầm nó nghe thông báo thôi 😁 Còn hình ảnh đồ thì k được.', 'Dương T. Bảo nó xem đc text thôi bác, ko xem đc picture hay voice', 'Nguyễn Phương bữa cũng dùng 1 lần xong bị cp nên xóa luôn :))']","Trần Gia xài thì nó bị cp lần đầu thôi, hành vi lạ nó cp mà.
Nếu muốn tránh thì bác login = cookie web",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,reup lại thiếu 1 hình nữa rồi 🙁 Đây là hình các bước để xem dữ liệu websocket của facebook nhé (giai đoạn phân tích dữ liệu tin nhắn - nếu các bạn chỉ tải về xài extension thôi thì không cần làm như ảnh này nhé),1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['reup lại thiếu 1 hình nữa rồi 🙁 Đây là hình các bước để xem dữ liệu websocket của facebook nhé (giai đoạn phân tích dữ liệu tin nhắn - nếu các bạn chỉ tải về xài extension thôi thì không cần làm như ảnh này nhé)', 'Giờ mà chỉnh sửa bài viết lại phải đợi duyệt 🙁 rồi lại lỡ tay bấm xóa thì toi']",Giờ mà chỉnh sửa bài viết lại phải đợi duyệt 🙁 rồi lại lỡ tay bấm xóa thì toi,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['reup lại thiếu 1 hình nữa rồi 🙁 Đây là hình các bước để xem dữ liệu websocket của facebook nhé (giai đoạn phân tích dữ liệu tin nhắn - nếu các bạn chỉ tải về xài extension thôi thì không cần làm như ảnh này nhé)', 'Giờ mà chỉnh sửa bài viết lại phải đợi duyệt 🙁 rồi lại lỡ tay bấm xóa thì toi']",hay :3,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,có thể xem lại cuộc tin nhắn đã bị xóa ko ông?,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",['có thể xem lại cuộc tin nhắn đã bị xóa ko ông?'],Trực Phan chỉ khi bác đang chạy thôi .-.,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Tran Nguyen Khang,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,đọc thì hiểu mà k biết làm 🙁 hóng video hướng dẫn của bác,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['đọc thì hiểu mà k biết làm 🙁 hóng video hướng dẫn của bác', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Hoang Tran để em thử bác', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Hoang Tran để em thử bác', 'Hoang Tran nghe phức tạp quá ạ @@']","Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['đọc thì hiểu mà k biết làm 🙁 hóng video hướng dẫn của bác', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Hoang Tran để em thử bác', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Hoang Tran để em thử bác', 'Hoang Tran nghe phức tạp quá ạ @@']",Hoang Tran để em thử bác,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['đọc thì hiểu mà k biết làm 🙁 hóng video hướng dẫn của bác', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Hoang Tran để em thử bác', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Hoang Tran để em thử bác', 'Hoang Tran nghe phức tạp quá ạ @@']",Hoang Tran nghe phức tạp quá ạ @@,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['đọc thì hiểu mà k biết làm 🙁 hóng video hướng dẫn của bác', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Hoang Tran để em thử bác', 'Duy Lucas nếu muốn cài thì bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Hoang Tran để em thử bác', 'Hoang Tran nghe phức tạp quá ạ @@']",Thủy Tiên Đặng lúc mình làm nó cũng phức tạp vậy á bạn,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Em hỏi ngu tí data lưu vào đâu nhỉ
Em lười đọc quá",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Em hỏi ngu tí data lưu vào đâu nhỉ\nEm lười đọc quá', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Nếu bác muốn không cần bật tab mà vẫn track được tin nhắn, thì mình có tool chạy bằng cơm ngồi chờ tin nhắn dùm bác nhé, có điều không free thôi']","Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Em hỏi ngu tí data lưu vào đâu nhỉ\nEm lười đọc quá', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Nếu bác muốn không cần bật tab mà vẫn track được tin nhắn, thì mình có tool chạy bằng cơm ngồi chờ tin nhắn dùm bác nhé, có điều không free thôi']",Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Em hỏi ngu tí data lưu vào đâu nhỉ\nEm lười đọc quá', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Nếu bác muốn không cần bật tab mà vẫn track được tin nhắn, thì mình có tool chạy bằng cơm ngồi chờ tin nhắn dùm bác nhé, có điều không free thôi']","Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Em hỏi ngu tí data lưu vào đâu nhỉ\nEm lười đọc quá', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Nếu bác muốn không cần bật tab mà vẫn track được tin nhắn, thì mình có tool chạy bằng cơm ngồi chờ tin nhắn dùm bác nhé, có điều không free thôi']","Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm
Lưu lại để sau này coi thì còn hiểu được",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Em hỏi ngu tí data lưu vào đâu nhỉ\nEm lười đọc quá', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Nếu bác muốn không cần bật tab mà vẫn track được tin nhắn, thì mình có tool chạy bằng cơm ngồi chờ tin nhắn dùm bác nhé, có điều không free thôi']",nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Em hỏi ngu tí data lưu vào đâu nhỉ\nEm lười đọc quá', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Nếu bác muốn không cần bật tab mà vẫn track được tin nhắn, thì mình có tool chạy bằng cơm ngồi chờ tin nhắn dùm bác nhé, có điều không free thôi']","Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Em hỏi ngu tí data lưu vào đâu nhỉ\nEm lười đọc quá', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Nếu bác muốn không cần bật tab mà vẫn track được tin nhắn, thì mình có tool chạy bằng cơm ngồi chờ tin nhắn dùm bác nhé, có điều không free thôi']","Hoang Tran ok bác
Thực ra em thấy cái này hơi k thiết thực lắm,m
+, phải bật tab fb mới được
+, việc thu hồi tin nhắn rất hiếm( đối với em)
Dù sao rất cảm ơn vì kiến thức bác đã share <3",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Em hỏi ngu tí data lưu vào đâu nhỉ\nEm lười đọc quá', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Nếu bác muốn không cần bật tab mà vẫn track được tin nhắn, thì mình có tool chạy bằng cơm ngồi chờ tin nhắn dùm bác nhé, có điều không free thôi']","Nếu bác muốn không cần bật tab mà vẫn track được tin nhắn, thì mình có tool chạy bằng cơm ngồi chờ tin nhắn dùm bác nhé, có điều không free thôi",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Em hỏi ngu tí data lưu vào đâu nhỉ\nEm lười đọc quá', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Cường Nguyễn mình không lưu data, chỉ hiển thị ra console của trình duyệt', 'Hoang Tran ủa không lưu lại thì sau này cũng đâu có đọc lại được tn đã gỡ', 'Cường Nguyễn lưu trong tab đó , ko tắt tab đi thì nó có xoá biến đi đâu', 'Nguyễn Văn Huy @@ chưa hiểu để làm gì lắm\nLưu lại để sau này coi thì còn hiểu được', 'nếu thấy ngta gỡ là vô console coi liền nha bạn :)) chứ gỡ rồi mấy ngày sau mới mở lại coi thì kì. Tính năng lưu để xem lại mình sẽ làm sau nhé', 'Cường Nguyễn nếu họ gỡ tin nhắn chữ thì bạn vô console đọc là được, còn nếu họ gỡ hình ảnh, thì mình cũng hiển thị hình ảnh trong console kèm theo link ảnh, bạn có thể mở rồi lưu lại ... dùng dần ... :v', 'Hoang Tran ok bác\nThực ra em thấy cái này hơi k thiết thực lắm,m\n+, phải bật tab fb mới được\n+, việc thu hồi tin nhắn rất hiếm( đối với em)\nDù sao rất cảm ơn vì kiến thức bác đã share <3', 'Nếu bác muốn không cần bật tab mà vẫn track được tin nhắn, thì mình có tool chạy bằng cơm ngồi chờ tin nhắn dùm bác nhé, có điều không free thôi']","Hoang Tran cảm ơn bác, nào có nhu cầu làm phi vụ mờ ám gì em sẽ pm bác xD",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Cảm ơn bạn,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"hình như nó load lại những tin nhắn cũ, request_id cũng là null nha b, khi hover vô danh sách người onl , nó sẽ load những tin nhắn gần đó :V",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nhiều khi mệt mỏi đám con gái cứ nhắn xong thu hồi.,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Nhiều khi mệt mỏi đám con gái cứ nhắn xong thu hồi.', 'Dương Tuấn Nhật giờ thì mệt mỏi vì biết được nó nhắn gì :))', 'Dương Tuấn Nhật giờ thì mệt mỏi vì biết được nó nhắn gì :))', 'Hoang Tran Ông thêm cách build vào đi, t nhớ là chỉ nén xong đổi đuôi nhưng mà ko nhớ rõ.']",Dương Tuấn Nhật giờ thì mệt mỏi vì biết được nó nhắn gì :)),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Nhiều khi mệt mỏi đám con gái cứ nhắn xong thu hồi.', 'Dương Tuấn Nhật giờ thì mệt mỏi vì biết được nó nhắn gì :))', 'Dương Tuấn Nhật giờ thì mệt mỏi vì biết được nó nhắn gì :))', 'Hoang Tran Ông thêm cách build vào đi, t nhớ là chỉ nén xong đổi đuôi nhưng mà ko nhớ rõ.']","Hoang Tran Ông thêm cách build vào đi, t nhớ là chỉ nén xong đổi đuôi nhưng mà ko nhớ rõ.",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Nhiều khi mệt mỏi đám con gái cứ nhắn xong thu hồi.', 'Dương Tuấn Nhật giờ thì mệt mỏi vì biết được nó nhắn gì :))', 'Dương Tuấn Nhật giờ thì mệt mỏi vì biết được nó nhắn gì :))', 'Hoang Tran Ông thêm cách build vào đi, t nhớ là chỉ nén xong đổi đuôi nhưng mà ko nhớ rõ.']",Dương Tuấn Nhật yêu đương mệt thế hả anh =))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Cơ mà thế rốt cuộc tại sao nó lại nặng hơn trăm mb thế chủ thớt 😄,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cơ mà thế rốt cuộc tại sao nó lại nặng hơn trăm mb thế chủ thớt 😄', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Nguyễn Anh Nhân làm vậy thì nhanh ra sản phẩm nhưng user đợi down chắc ngán 😀']","Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cơ mà thế rốt cuộc tại sao nó lại nặng hơn trăm mb thế chủ thớt 😄', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Nguyễn Anh Nhân làm vậy thì nhanh ra sản phẩm nhưng user đợi down chắc ngán 😀']","Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cơ mà thế rốt cuộc tại sao nó lại nặng hơn trăm mb thế chủ thớt 😄', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Nguyễn Anh Nhân làm vậy thì nhanh ra sản phẩm nhưng user đợi down chắc ngán 😀']","Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cơ mà thế rốt cuộc tại sao nó lại nặng hơn trăm mb thế chủ thớt 😄', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Nguyễn Anh Nhân làm vậy thì nhanh ra sản phẩm nhưng user đợi down chắc ngán 😀']","Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cơ mà thế rốt cuộc tại sao nó lại nặng hơn trăm mb thế chủ thớt 😄', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Nguyễn Anh Nhân làm vậy thì nhanh ra sản phẩm nhưng user đợi down chắc ngán 😀']",Việt Thảo chắc chưa lọc hết file assets như hình ảnh,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cơ mà thế rốt cuộc tại sao nó lại nặng hơn trăm mb thế chủ thớt 😄', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Nguyễn Anh Nhân làm vậy thì nhanh ra sản phẩm nhưng user đợi down chắc ngán 😀']",Nguyễn Anh Nhân làm vậy thì nhanh ra sản phẩm nhưng user đợi down chắc ngán 😀,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cơ mà thế rốt cuộc tại sao nó lại nặng hơn trăm mb thế chủ thớt 😄', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Việt Thảo do team bạn ấy lưu cả code của 1 trang web nhé, với đủ thứ hình ảnh, thư viện, templates .... Vân vân mây mây, còn code chạy logic chính chỉ một xíu thôi à', 'Web mà minify code Js thì làm sao mà nặng vậy được nhie 🤔 thế chắc chỉ có do assets, mình đoán do chưa tối ưu assets?', 'Minify bản develop, mình thấy vẫn lưu sourceMapingUrl 😅 với lưu cả 1 vài bộ template để làm trang popup của extension, chưa xóa đi trước khi puplic lên luôn', 'Việt Thảo vì nhét luôn cả cái template web, không dám bỏ bớt file sợ xoá nhầm file đó a :v', 'Việt Thảo chắc chưa lọc hết file assets như hình ảnh', 'Nguyễn Anh Nhân làm vậy thì nhanh ra sản phẩm nhưng user đợi down chắc ngán 😀']",Việt Thảo trước em toàn thế nên em biết =)),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,=))) toi hóng bản zalo xem bình luận hơn :v,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['=))) toi hóng bản zalo xem bình luận hơn :v', 'Nguyễn Minh Cảnh theo dõi bồ cho dễ hử', 'Nguyễn Minh Cảnh theo dõi bồ cho dễ hử', 'Nguyễn Minh Thành để xem mấy bác thương gia báo giá lẫn nhau .-.']",Nguyễn Minh Cảnh theo dõi bồ cho dễ hử,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['=))) toi hóng bản zalo xem bình luận hơn :v', 'Nguyễn Minh Cảnh theo dõi bồ cho dễ hử', 'Nguyễn Minh Cảnh theo dõi bồ cho dễ hử', 'Nguyễn Minh Thành để xem mấy bác thương gia báo giá lẫn nhau .-.']",Nguyễn Minh Thành để xem mấy bác thương gia báo giá lẫn nhau .-.,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['=))) toi hóng bản zalo xem bình luận hơn :v', 'Nguyễn Minh Cảnh theo dõi bồ cho dễ hử', 'Nguyễn Minh Cảnh theo dõi bồ cho dễ hử', 'Nguyễn Minh Thành để xem mấy bác thương gia báo giá lẫn nhau .-.']",Nguyễn Minh Cảnh chuẩn đét,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Thực Trịnh,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Thực Trịnh', 'Đặng Linh b tag để dọa tôi hay gì', 'Đặng Linh b tag để dọa tôi hay gì', 'Thực Trịnh nhột à bạn', 'Đặng Linh b tag để dọa tôi hay gì', 'Thực Trịnh nhột à bạn', 'Đặng Linh']",Đặng Linh b tag để dọa tôi hay gì,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Thực Trịnh', 'Đặng Linh b tag để dọa tôi hay gì', 'Đặng Linh b tag để dọa tôi hay gì', 'Thực Trịnh nhột à bạn', 'Đặng Linh b tag để dọa tôi hay gì', 'Thực Trịnh nhột à bạn', 'Đặng Linh']",Thực Trịnh nhột à bạn,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Thực Trịnh', 'Đặng Linh b tag để dọa tôi hay gì', 'Đặng Linh b tag để dọa tôi hay gì', 'Thực Trịnh nhột à bạn', 'Đặng Linh b tag để dọa tôi hay gì', 'Thực Trịnh nhột à bạn', 'Đặng Linh']",Đặng Linh,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Thực Trịnh', 'Đặng Linh b tag để dọa tôi hay gì', 'Đặng Linh b tag để dọa tôi hay gì', 'Thực Trịnh nhột à bạn', 'Đặng Linh b tag để dọa tôi hay gì', 'Thực Trịnh nhột à bạn', 'Đặng Linh']",Rồi tôi có pay acc ko để chuẩn bị tâm lý,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"extension như này sẽ k up lên đc store đâu ad đừng mong 😂, vi phạm rule rồi ấy",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['extension như này sẽ k up lên đc store đâu ad đừng mong 😂, vi phạm rule rồi ấy', 'Vũ Đạt Phạm rule gì vậy bạn, mình chưa up bao giờ nên cũng không biết 😥', 'Vũ Đạt Phạm rule gì vậy bạn, mình chưa up bao giờ nên cũng không biết 😥', 'Mình cũng k rõ rule ở mục nào nhưng đại loại là như này á b']","Vũ Đạt Phạm rule gì vậy bạn, mình chưa up bao giờ nên cũng không biết 😥",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['extension như này sẽ k up lên đc store đâu ad đừng mong 😂, vi phạm rule rồi ấy', 'Vũ Đạt Phạm rule gì vậy bạn, mình chưa up bao giờ nên cũng không biết 😥', 'Vũ Đạt Phạm rule gì vậy bạn, mình chưa up bao giờ nên cũng không biết 😥', 'Mình cũng k rõ rule ở mục nào nhưng đại loại là như này á b']",Mình cũng k rõ rule ở mục nào nhưng đại loại là như này á b,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['extension như này sẽ k up lên đc store đâu ad đừng mong 😂, vi phạm rule rồi ấy', 'Vũ Đạt Phạm rule gì vậy bạn, mình chưa up bao giờ nên cũng không biết 😥', 'Vũ Đạt Phạm rule gì vậy bạn, mình chưa up bao giờ nên cũng không biết 😥', 'Mình cũng k rõ rule ở mục nào nhưng đại loại là như này á b']","Vũ Đạt Phạm nếu vậy mấy tool download story video, download full album fb cũng đâu đc phép nhỉ 🤔",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"alo alo, em đang coi phim nên cho em để lại một tia thần thức :v",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Như Ngọc Kiều,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nhưng mà thật ra là ko biết cài làm sao 🤷,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",['Nhưng mà thật ra là ko biết cài làm sao 🤷'],"Nguyễn Phạm Vương Sơn bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Ngô Hữu Đang anh trai vào giải nghĩa giúp em, lú quá rồi anh",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Ngô Hữu Đang anh trai vào giải nghĩa giúp em, lú quá rồi anh']","Lê Huỳnh Hải Đăng thì mỗi lần mình gửi tin nhắn hay cmt thì extension nó ghi lại,mình có xóa tin nhắn thì ở kia vẫn lưu nên vẫn xem dc thôi :V,có code github kìa,clone về rồi add vào extension trên wed là dc",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,cái này có xem được tin nhắn của người ta họ gỡ ko mn,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['cái này có xem được tin nhắn của người ta họ gỡ ko mn', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh Cài tool trước khi tin nhắn bị gỡ =))', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh Cài tool trước khi tin nhắn bị gỡ =))', 'Lê Công Tuấn Vũ giờ cài để xài cho mai mốt :(((']",Quang Minh xem được hết luôn bạn eii : )),1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['cái này có xem được tin nhắn của người ta họ gỡ ko mn', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh Cài tool trước khi tin nhắn bị gỡ =))', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh Cài tool trước khi tin nhắn bị gỡ =))', 'Lê Công Tuấn Vũ giờ cài để xài cho mai mốt :(((']",Quang Minh Cài tool trước khi tin nhắn bị gỡ =)),1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['cái này có xem được tin nhắn của người ta họ gỡ ko mn', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh Cài tool trước khi tin nhắn bị gỡ =))', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh Cài tool trước khi tin nhắn bị gỡ =))', 'Lê Công Tuấn Vũ giờ cài để xài cho mai mốt :(((']",Lê Công Tuấn Vũ giờ cài để xài cho mai mốt :(((,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['cái này có xem được tin nhắn của người ta họ gỡ ko mn', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh Cài tool trước khi tin nhắn bị gỡ =))', 'Quang Minh xem được hết luôn bạn eii : ))', 'Quang Minh Cài tool trước khi tin nhắn bị gỡ =))', 'Lê Công Tuấn Vũ giờ cài để xài cho mai mốt :(((']",Tường Khải ước gì bài này đăng sớm 2 tuần :v,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,ước gì có tool lấy lại những tin nhắn đã xóa,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ước gì có tool lấy lại những tin nhắn đã xóa', 'Trịnh Tú xóa r thì bản thân Facebook chưa chắc còn lưu để mà mình lấy lại bác ạ\n\nGiờ nếu bắt chước cách làm của bài đăng này thì phải luôn lưu lại tin nhắn mỗi khi nhận đc']","Trịnh Tú xóa r thì bản thân Facebook chưa chắc còn lưu để mà mình lấy lại bác ạ

Giờ nếu bắt chước cách làm của bài đăng này thì phải luôn lưu lại tin nhắn mỗi khi nhận đc",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['ước gì có tool lấy lại những tin nhắn đã xóa', 'Trịnh Tú xóa r thì bản thân Facebook chưa chắc còn lưu để mà mình lấy lại bác ạ\n\nGiờ nếu bắt chước cách làm của bài đăng này thì phải luôn lưu lại tin nhắn mỗi khi nhận đc']",Có cách khả quan hơn là làm theo kiểu cứ ai nhắn cho mình là mình có con bot tự động nhắn lại cho clone,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,mình vừa thử thì facebook báo vày là sao các bác??,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['mình vừa thử thì facebook báo vày là sao các bác??', 'Erich Nguyễn là bạn đang bước vô con đường lập trình viên rồi á', 'Erich Nguyễn là bạn đang bước vô con đường lập trình viên rồi á', 'có khi nào nghịch nghịch bị ""hack"" face luôn không nhỉ :D']",Erich Nguyễn là bạn đang bước vô con đường lập trình viên rồi á,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['mình vừa thử thì facebook báo vày là sao các bác??', 'Erich Nguyễn là bạn đang bước vô con đường lập trình viên rồi á', 'Erich Nguyễn là bạn đang bước vô con đường lập trình viên rồi á', 'có khi nào nghịch nghịch bị ""hack"" face luôn không nhỉ :D']","có khi nào nghịch nghịch bị ""hack"" face luôn không nhỉ :D",
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['mình vừa thử thì facebook báo vày là sao các bác??', 'Erich Nguyễn là bạn đang bước vô con đường lập trình viên rồi á', 'Erich Nguyễn là bạn đang bước vô con đường lập trình viên rồi á', 'có khi nào nghịch nghịch bị ""hack"" face luôn không nhỉ :D']",Erich Nguyễn nó khuyên nếu bác không phải Imposter thì hãy thành thật không thì bị bay acc đó🐧,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Cái này nó không khó, nhưng bài viết này thú vị ở cách dẫn dắt, giải quyết vấn đề. Bác nào pro biết rồi thì có thể lướt qua mà :D",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Fork lẹ về ngẫm,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,tin đó được lưu vòa đâu đó ad,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",['tin đó được lưu vòa đâu đó ad'],Phạm Thành Nam làm phát a,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nguyên lý là nó lưu toàn bộ tin nhắn vào ra của mess từ lúc cài extension.,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nguyễn Quốc Anh m học cái lày à,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Cái này có xem lại tin nhắn trong nhóm đã gỡ không bạn, cái kb2a tool tôi đăng ký chỉ xem được mỗi tin nhắn giữa 2 người thôi",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cái này có xem lại tin nhắn trong nhóm đã gỡ không bạn, cái kb2a tool tôi đăng ký chỉ xem được mỗi tin nhắn giữa 2 người thôi', 'Triệu Bảo được á bạn, nhưng mà trong console nên hơi khó xem lịch sử, mình cũng chưa hiển thị tin nhắn của ai gửi, nên nếu muốn đẹp bác cứ dùng kb2atool nhé', 'Triệu Bảo được á bạn, nhưng mà trong console nên hơi khó xem lịch sử, mình cũng chưa hiển thị tin nhắn của ai gửi, nên nếu muốn đẹp bác cứ dùng kb2atool nhé', 'Triệu Bảo trong nhóm vẫn hiển thị mà bạn?']","Triệu Bảo được á bạn, nhưng mà trong console nên hơi khó xem lịch sử, mình cũng chưa hiển thị tin nhắn của ai gửi, nên nếu muốn đẹp bác cứ dùng kb2atool nhé",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cái này có xem lại tin nhắn trong nhóm đã gỡ không bạn, cái kb2a tool tôi đăng ký chỉ xem được mỗi tin nhắn giữa 2 người thôi', 'Triệu Bảo được á bạn, nhưng mà trong console nên hơi khó xem lịch sử, mình cũng chưa hiển thị tin nhắn của ai gửi, nên nếu muốn đẹp bác cứ dùng kb2atool nhé', 'Triệu Bảo được á bạn, nhưng mà trong console nên hơi khó xem lịch sử, mình cũng chưa hiển thị tin nhắn của ai gửi, nên nếu muốn đẹp bác cứ dùng kb2atool nhé', 'Triệu Bảo trong nhóm vẫn hiển thị mà bạn?']",Triệu Bảo trong nhóm vẫn hiển thị mà bạn?,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Cái này có xem lại tin nhắn trong nhóm đã gỡ không bạn, cái kb2a tool tôi đăng ký chỉ xem được mỗi tin nhắn giữa 2 người thôi', 'Triệu Bảo được á bạn, nhưng mà trong console nên hơi khó xem lịch sử, mình cũng chưa hiển thị tin nhắn của ai gửi, nên nếu muốn đẹp bác cứ dùng kb2atool nhé', 'Triệu Bảo được á bạn, nhưng mà trong console nên hơi khó xem lịch sử, mình cũng chưa hiển thị tin nhắn của ai gửi, nên nếu muốn đẹp bác cứ dùng kb2atool nhé', 'Triệu Bảo trong nhóm vẫn hiển thị mà bạn?']",Triệu Bảo bác lên premium là xem được hết nhé,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nguyễn Ngân sáng mới nói,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Có xem được video đã gỡ không ạ?,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Có xem được video đã gỡ không ạ?', 'Van Le ko']",Van Le ko,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Có xem được video đã gỡ không ạ?', 'Van Le ko']","Bùi Nguyễn Quang Duy tiếc thế, lại không download về được",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Hay quáaa,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Ngọc Quỳnh u là tròi,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",['Ngọc Quỳnh u là tròi'],Cẩm Ngọc thành dev nhờ soulmate tôi cà giựt cà hẩy,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Có khả năng chèn tin nhắn bất kỳ vào khoảng thời gian quá khứ trong mess ko thớt,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Có khả năng chèn tin nhắn bất kỳ vào khoảng thời gian quá khứ trong mess ko thớt', 'Đỗ Đức Hiệp làm được thế thì mình vào làm cho fb rồi bác 😂']",Đỗ Đức Hiệp làm được thế thì mình vào làm cho fb rồi bác 😂,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Có khả năng chèn tin nhắn bất kỳ vào khoảng thời gian quá khứ trong mess ko thớt', 'Đỗ Đức Hiệp làm được thế thì mình vào làm cho fb rồi bác 😂']","Hoang Tran ok thớt, chúc thớt một buổi tối vui vẻ",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,các tin nhắn từ lâu rồi có xem lại dc ko vậy mn ?,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['các tin nhắn từ lâu rồi có xem lại dc ko vậy mn ?', 'Thắng Vương nếu thời điểm thu hồi tin nhắn đã cài ext vào rồi thì mới xem đc nhé', 'Thắng Vương nếu thời điểm thu hồi tin nhắn đã cài ext vào rồi thì mới xem đc nhé', 'uhm, buồn ghê.']",Thắng Vương nếu thời điểm thu hồi tin nhắn đã cài ext vào rồi thì mới xem đc nhé,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['các tin nhắn từ lâu rồi có xem lại dc ko vậy mn ?', 'Thắng Vương nếu thời điểm thu hồi tin nhắn đã cài ext vào rồi thì mới xem đc nhé', 'Thắng Vương nếu thời điểm thu hồi tin nhắn đã cài ext vào rồi thì mới xem đc nhé', 'uhm, buồn ghê.']","uhm, buồn ghê.",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['các tin nhắn từ lâu rồi có xem lại dc ko vậy mn ?', 'Thắng Vương nếu thời điểm thu hồi tin nhắn đã cài ext vào rồi thì mới xem đc nhé', 'Thắng Vương nếu thời điểm thu hồi tin nhắn đã cài ext vào rồi thì mới xem đc nhé', 'uhm, buồn ghê.']",Thắng Vương nếu có db hay chỗ nào đó để lưu thì đc nha,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Đã tặng bác một star 😁 rất hữu ích,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Đọc đc cmt zalo thì thôi... :)),1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Đọc đc cmt zalo thì thôi... :))', 'Nguyên Em kéo về phiên bản cũ ấy', 'Nguyên Em kéo về phiên bản cũ ấy', 'Minh Khang để test']",Nguyên Em kéo về phiên bản cũ ấy,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Đọc đc cmt zalo thì thôi... :))', 'Nguyên Em kéo về phiên bản cũ ấy', 'Nguyên Em kéo về phiên bản cũ ấy', 'Minh Khang để test']",Minh Khang để test,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Đọc đc cmt zalo thì thôi... :))', 'Nguyên Em kéo về phiên bản cũ ấy', 'Nguyên Em kéo về phiên bản cũ ấy', 'Minh Khang để test']",Minh Khang ko được đâu bác ạ =)),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,vẫn chưa biết làm như lào :),1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['vẫn chưa biết làm như lào :)', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'ròi làm sao để xem tn ạ', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'ròi làm sao để xem tn ạ', 'em làm đến đó xong ấn vào ext nó không hiện ra cái gì cả']","Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['vẫn chưa biết làm như lào :)', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'ròi làm sao để xem tn ạ', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'ròi làm sao để xem tn ạ', 'em làm đến đó xong ấn vào ext nó không hiện ra cái gì cả']",ròi làm sao để xem tn ạ,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['vẫn chưa biết làm như lào :)', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'ròi làm sao để xem tn ạ', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'ròi làm sao để xem tn ạ', 'em làm đến đó xong ấn vào ext nó không hiện ra cái gì cả']",em làm đến đó xong ấn vào ext nó không hiện ra cái gì cả,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['vẫn chưa biết làm như lào :)', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'ròi làm sao để xem tn ạ', 'Vũ Quân bạn vào link github mình đưa, rồi tải code về, giải nén ra, rồi vào trang quản lý extensions của trình duyệt bạn dùng, rồi kéo thả folder đã giải nén vào là xong nhé', 'ròi làm sao để xem tn ạ', 'em làm đến đó xong ấn vào ext nó không hiện ra cái gì cả']","Vũ Quân Bạn ấn F12 để mở giao diện console nhé, toàn bộ tin nhắn tới và đi mình sẽ hiển thị trong đó. Nếu có ai đó thu hồi tin nhắn, thì bạn chỉ cần vô đó coi lại lịch sử tin nhắn là xong",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"để test thử, cảm ơn chủ tus :>",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Hóng bản Zalo hehehe,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Đặng Hữu Tân chú Tân làm mấy này đc khum,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",['Đặng Hữu Tân chú Tân làm mấy này đc khum'],em bên đồ hoạ 3d chứ ko bên cốt đơ :v,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,tks bác <3,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,làm cho zalo đi thớt,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",['làm cho zalo đi thớt'],"Hoa Tú zalo web mình mới xem thử thì nó không dùng websocket á bác, kiểu này không đem áp dụng qua được rồi",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Bổ ích đấy, nếu bài viết xuất hiện sớm hơn 2 năm trước thì có lẽ tôi rất cần. Còn giờ chẳng quan tâm mấy, ai cho đọc thì đọc không thì thôi. Dù sao cảm ơn bro rất nhiều.",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Có bản cho instagram không bác,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Có bản cho instagram không bác', 'Dat D. Le ôi mình cũng cần cho ig', 'Dat D. Le ôi mình cũng cần cho ig', 'Dat D. Le úi insta cũng có websocket chat nè, cùng tạo bởi fb có khác, chắc chỉnh sửa xíu là đem qua cũng chạy được á']",Dat D. Le ôi mình cũng cần cho ig,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Có bản cho instagram không bác', 'Dat D. Le ôi mình cũng cần cho ig', 'Dat D. Le ôi mình cũng cần cho ig', 'Dat D. Le úi insta cũng có websocket chat nè, cùng tạo bởi fb có khác, chắc chỉnh sửa xíu là đem qua cũng chạy được á']","Dat D. Le úi insta cũng có websocket chat nè, cùng tạo bởi fb có khác, chắc chỉnh sửa xíu là đem qua cũng chạy được á",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Có bản cho instagram không bác', 'Dat D. Le ôi mình cũng cần cho ig', 'Dat D. Le ôi mình cũng cần cho ig', 'Dat D. Le úi insta cũng có websocket chat nè, cùng tạo bởi fb có khác, chắc chỉnh sửa xíu là đem qua cũng chạy được á']",Hoang Tran bác chỉnh giúp em r share lại trên github đc không ạ? Tks bác nhiều,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,ghim ghim cực mạnh,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,saved ❤ thanks bác,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Trịnh Thị Hạnh.,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Quào :o,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"chỉ đc nếu đang chat bằng trình duyệt đc không b
còn ngta nhắn r thu hồi mà mình không bật trình duyệt sẽ không đc ?",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['chỉ đc nếu đang chat bằng trình duyệt đc không b\ncòn ngta nhắn r thu hồi mà mình không bật trình duyệt sẽ không đc ?', 'Vũ Minh hóng hihihuhu']",Vũ Minh hóng hihihuhu,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['chỉ đc nếu đang chat bằng trình duyệt đc không b\ncòn ngta nhắn r thu hồi mà mình không bật trình duyệt sẽ không đc ?', 'Vũ Minh hóng hihihuhu']",Đúng rồi bạn,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Mình hứng thú nhiều hơn với regex :v
Các trùm regex giải thích giúp mình với :3",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Mình hứng thú nhiều hơn với regex :v\nCác trùm regex giải thích giúp mình với :3', 'Sơn Thiên mình có giải thích trong mô tả của hình rồi nhé']",Sơn Thiên mình có giải thích trong mô tả của hình rồi nhé,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['Mình hứng thú nhiều hơn với regex :v\nCác trùm regex giải thích giúp mình với :3', 'Sơn Thiên mình có giải thích trong mô tả của hình rồi nhé']",Hoang Tran Chắc mình phải học thêm về regex chứ nhiều cái đọc hiểu được :v,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,bổ ích :v,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Vậy là dù bên kia thu hồi tin nhắn mình vẫn xem lại được🤔 hay thật,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Lê Quốc Bình kb2a =))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Coi lại hình ảnh đối phương đã gỡ k được bác ạ .,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nguyễn Văn Bảo gắt chưa :))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"À tiện thể cho e hỏi luôn có bác nào bị tạo file kiểu như này sau khi cài Redis không nhỉ: RedisQFork_xxxx.dat, mỗi ngày nó tặng e 15GB chiếm dụng ổ cứng xong toang luôn",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Em để đây lát xem lại ạ:)),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Nếu thực sự đối tác đã thu hồi tin nhắn, hẵng phải có lý do... Đọc được có khi hiểu nhầm 😊, an nhiên đi cho đời thêm phẻ 😊😊",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nghĩa là không thể khôi phuc tin nhắn đã xóa trước đó mà chỉ có thể khôi phục lại tin nhắn sau khi chạy script đó thôi à bác? Chán nhỉ,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,chời ơiiiiiiiiiiiiiiiii,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Quý Thím,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Trường Giang,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Hay vai :)),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Hay quá bác, em cay cái trò thu hồi tin này lâu lắm rồi, bác viết ext cho firefox đc k :))",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Đỉnh,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,hay quad,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,em vừa test thì thấy nó bị lung tung giữa các tin nhắn với nhau rồi em còn thấy cả post nữa chứ k phải riêng tin nhắn ._.,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",['em vừa test thì thấy nó bị lung tung giữa các tin nhắn với nhau rồi em còn thấy cả post nữa chứ k phải riêng tin nhắn ._.'],"Chu Thế Anh do hiện tại chưa biết cách phân biệt các luồng dữ liệu sap cho phù hợp á bạn, có nhiều luồng nó giống nhau nên nó tưởng tin nhắn luôn",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Hoang Vuong hồi trc hình như a có làm 1 vụ gần giống :v,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",['Hoang Vuong hồi trc hình như a có làm 1 vụ gần giống :v'],Võ Kế Khoa giờ bận gòi em :))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nguyễn Trung Anh xem rồi làm cho tao,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Tôi vừa du hành thời gian hả,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,:)) tự xóa bài luôn,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Vjp pro,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Phong Dương,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"cách này thì khá là hay, mình nghĩ nếu lưu vào localstorage hay chrome storage api thì sẽ hay hơn ấy nhỉ? làm thêm cái ui để xóa tin nhân cũ",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nhiều lúc mệt mỏi thật 🤣,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,cho hỏi cái này bị cái gì vậy các bác :v. vào ko đc nơi😕,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Ông nào chỉ cách tải ảnh bị gỡ với 😂,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Trần Quang Trí tự làm luôn nè =)),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,KB2A nghe quen thế nhỉ?,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Trần Anh,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Hoàng Vũ Gia Thông,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,GG,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,quá hay,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Cứ có sẵn mà xài. Chứ này có video làm theo cũng k đc 🤣,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,cho em hỏi kb2a fix rồi hay sao mình xem nữa không dc nhỉ,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Máy cái này dễ như ăn cơm ấy, bạn làm được hay không thì mình cũng đi ăn cơm đây 😂",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Mắt ko thấy, tim ko đau",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,tin nhắn xóa lâu rồi có xem được ko nhỉ. :3,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Mid Mid,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,nhận ra mình xoá cuộc trò chuyện chứ ko phải gỡ 🥲,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"Saved :v, cẳm ơn bác, xíu đọc ạ",0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Xịn ạ,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,. Đây tý nghiên cứu,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,kiến thức này đã đc tiếp thu =~=,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Có những mắt không thấy tim k đau ad :)))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,tuần trước thầy mới giảng về socket xong mà quên hết rồi =))),0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Đã saved lại :3 chút đọc,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Đức Thiện,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,hay,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Hoa Doan,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Vu Hoang Nhan giải thích cho tao,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Hay,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nguyễn Hải Nam,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Nguyễn Thành Hưng xem rồi làm rồi giải thích cho t..,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Lê Minh,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,. Bao giờ hiểu thì làm :((((,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,Quý Thím,0
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..",,"chạy rồi chạy rồi :)))) mọi người sắp được dùng extension ngon rồi, giờ chỉnh lại giao diện cho đẹp là lên kệ được rồi nhé",1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['chạy rồi chạy rồi :)))) mọi người sắp được dùng extension ngon rồi, giờ chỉnh lại giao diện cho đẹp là lên kệ được rồi nhé', 'version 2 ra rồi nhé: https://www.facebook.com/groups/j2team.community/posts/1651683238497123']",version 2 ra rồi nhé: https://www.facebook.com/groups/j2team.community/posts/1651683238497123,1
"#j2team_share #j2team_tutorial #j2team_discussion
Tự tạo 1 extension xem lại tin nhắn bị gỡ trên fb messenger

(reup, mình lỡ tay xóa bài viết trước)

Chào mọi người, lại là mình đây.

Hôm qua lướt fb thấy bài viết của KB2ATool (https://www.facebook.com/KB2A.Team/posts/344823077177578) (đã cũ) thông báo ra phiên bản mới của KB2A Tool. Cũng nghe danh lâu nên hào hứng vô tải về xài thử, mới thấy extension này nó nặng hơn trăm MB ạ 😢 Không hiểu code gì mà code nặng thế, sự tò mò nó nổi lên, thế là vào xem code, xem nó hoạt động thế nào…

Sau vài đường google (gần chục tiếng), cuối cùng mình đã hiểu phần nào cách hoạt động của chức năng xem tin nhắn đã gỡ trên fb rồi. Mà cái gì hay với lạ thì lạ muốn chia sẻ với mọi người 😁

Source code của extension KB2A Tool thì chắc chắn là mấy bạn dev trong team đó đã nén hết rồi, nên việc tìm hiểu code mới mất nhiều thời gian như vậy. Dưới đây mình sẽ nói tổng quan về cách hoạt động của extension và cách tìm hiểu, cách làm từng bước nhé.

P/s: Bài viết này mình viết dựa trên tinh thần chia sẻ kiến thức, chứ mình không quảng cáo hay chê bai gì extension KB2ATool nha. Nếu thích mọi người có thể tải về xài ủng hộ mấy bạn ấy nha, tool đó có nhiều chức năng lắm không chỉ mỗi xem tin nhắn đã gỡ đâu, và cũng có giao diện đẹp nữa. ❤️

OK LET’S GO.

Sơ lược cách hoạt động của extension
1. LƯU HẾT TIN NHẮN 
Mình sẽ tạo 1 script, chèn script nó vào trang facebook, script sẽ lắng nghe mọi sự kiện gừi/nhận tin nhắn, và lưu lại nội dung tin nhắn kèm theo id của tin nhắn đó.

2. KIỂM TRA TIN NHẮN CŨ 
Kèm theo đó, mỗi khi có sự kiện tin nhắn mới, mình sẽ kiểm tra xem trong danh sách đã lưu có thằng nào giống id với sự kiện mới này không. 
Nếu có thì (rất có thể) đây là sự kiện thu hồi tin nhắn. 
=> XUẤT RA TIN NHẮN ĐƯỢC THU HỒI

Để hiểu chi tiết cách làm, mọi người đọc tiếp nhé ❤️

Cách hoạt động của tin nhắn trong fb:
Để có thể gửi nhận tin nhắn trong thời gian thực, FB không dùng những loại request GET PUT bình thường như fetch, ajax, axios, … Mà nó dùng 1 cấu trúc khác, đó là  (https://topdev.vn/blog/socket-la-gi-websocket-la-gi/), cung cấp khả năng giao tiếp thời gian thực giữa client và server, và có thể là giữa các client với nhau nữa..

Nếu mọi người vào devtool của trình duyệt, vào tab Network và lọc request theo WS (websocket) thì sẽ thấy được những kết nối websocket được dùng bởi FB. 

FB có nhiều kết nối websocket, trong đó thằng dành cho tin nhắn có tên mở đầu là chat?region=….. Bấm vào ta sẽ thấy được mọi luồng dữ liệu tới và đi trong kết nối websocket ấy.

Phân tích dữ liệu tin nhắn
Có rất nhiều luồng dữ liệu tới và đi trong websocket chat này, nếu chúng ta thử gửi 1 tin cho người khác, nó sẽ tạo 1 luồng gửi đi, còn người khác gửi cho mình, sẽ có 1 luồng gửi về.

Dữ liệu trong mỗi luồng mặc định hiển thị dưới dạng base64, chúng là có thể chuyển về utf8 để dễ đọc hơn (thấy nó giống chuỗi json hơn thôi chứ vẫn khó đọc lắm 😂).

Nếu tìm kỹ chúng ta sẽ thấy được nội dung tin nhắn, và thật may là không bị mã hóa gì khác nữa cả 🥸. OKE tiếp theo để cho tiện thì ta tạo 1 regex giúp ta lấy được đoạn tin nhắn đó ra khỏi chuỗi dữ liệu, mình dùng web regexr.com để tạo regex cho lẹ.

**~ 2 thousand years later ....**

Phải đi học lại khóa regex mới được 😢😢😢

**YAY** đã lấy được nội dung tin nhắn ra khỏi luồng dữ liệu rồi. Giờ để mọi thứ được tự động, hãy tạo extension.

Tạo extension
Mình tìm hiểu cách làm extension ở https://topdev.vn/blog/cach-build-chrome-extension/ kết hợp với ngẫm code của KB2A Tool.

Vấn đề chính bây giờ đó là làm sao để có thể lắng nghe websocket của fb. Mỗi biến websocket được tạo ra sẽ là 1 biến local riêng biệt, không phải biến toàn cục, không thể truy cập được từ bên ngoài.

Sau khi tu luyện bằng source code KB2A Tool, thì mình đã tìm ra chân lý. Mấy bạn ấy tạo 1 đoạn script, và cho nó chạy trước khi trang fb chạy (run at document_start). Đoạn script này sẽ tạo ra 1 biến window.WebSocket **GIẢ**, trong đó chèn code lắng nghe sự kiện.

Khi trang facebook bắt đầu chạy, nó sẽ dùng thằng **GIẢ** này để tạo biến websocket local cho riêng nó để dùng. Nhưng do đã bị **LÀM GIẢ** từ trước, nên trong biến local đó đã có sẵn code lắng nghe sự kiện của ta. BÙMMM 😂😂🤯🤯

Vậy là mọi ý tưởng đã hoàn thành. Mình đã thực hiện và chia sẻ source code với mọi người tại github https://github.com/HoangTran0410/RevealDeletedFBMessages

Nếu thấy hay thì mọi người hãy star/folk project để nhận được thông báo cập nhật mới nhất nhé.

p/s: Mình sẽ thêm ảnh từng bước và hướng dẫn chi tiết trong từng ảnh nhé..","['chạy rồi chạy rồi :)))) mọi người sắp được dùng extension ngon rồi, giờ chỉnh lại giao diện cho đẹp là lên kệ được rồi nhé', 'version 2 ra rồi nhé: https://www.facebook.com/groups/j2team.community/posts/1651683238497123']",Hoang Tran phải cài extension này trc khi xoá đúng k anh? Chứ xoá r cài đâu dùng đc đâu hả,1
